buildscript {
    repositories {
        maven {
            name 'central'
            url 'https://maven.thorfusion.com/artifactory/central/'
        }
    }
    dependencies {
        classpath('com.anatawa12.forge:ForgeGradle:1.2-1.1.+') {
            changing = true
        }
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.33.1"
    }
}

plugins {
    id 'java-library'
}


repositories {
    maven {
        name 'central'
        url 'https://maven.thorfusion.com/artifactory/central/'
    }

}

apply plugin: 'forge'
apply plugin: 'idea'
apply plugin: "com.jfrog.artifactory"
apply plugin: "maven-publish"
apply plugin: "maven"

// Define properties file
ext.configFile = file "build.properties"

configFile.withReader {
    // Load config. It shall from now be referenced as simply config or project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = "${config.minecraft_version}-${config.mod_version}"
group = "electroblob.wizardry" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Wizardry"
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

minecraft {
    version = config.minecraft_version + "-" + config.forge_version
    replaceIn "electroblob/wizardry/Wizardry.java"
    replace "GRADLE_MODVERSION", config.mod_version
}

task deobfJar(type: Jar) { // Generate deobfuscated
    from sourceSets.main.output
    classifier = 'deobf'
}
task sourceJar(type: Jar) { // Generate sources
    from sourceSets.main.allSource
    classifier = 'sources'
}
tasks.build.dependsOn('sourceJar', 'deobfJar')
artifacts {
    archives deobfJar
    archives sourceJar
    archives jar
}

dependencies {
    implementation "codechicken:NotEnoughItems:1.7.10-1.0.5.120:dev"
}

processResources
        {
            duplicatesStrategy = 'include'
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", config.mod_version
            inputs.property "mcversion", config.minecraft_version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version': config.mod_version, 'mcversion': config.minecraft_version
            }
            from('src/main') {
                include '*.info'
                expand 'version': config.mod_version, 'mc_version': config.minecraft_version, 'fmp_version': config.FMP_version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }

artifactory {
    contextUrl = System.getenv("MAVEN_URL")
    publish {
        repository {
            repoKey = 'thorfusion'
            username = System.getenv("MAVEN_USERNAME")
            password = System.getenv("MAVEN_PASSWORD")
            maven = true
        }
        defaults {
            publications('mavenJava')
        }
        publishBuildInfo = false
        publishArtifacts = true
        publishPom = true
    }
    resolve {
        repository {
            repoKey = 'central'
            username = System.getenv("MAVEN_USERNAME")
            password = System.getenv("MAVEN_PASSWORD")
            maven = true

        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            components.java.withVariantsFromConfiguration(configurations.runtimeElements) {
                skip()
            }
        }
    }
}